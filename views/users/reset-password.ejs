<% layout('layouts/boilerplate')%>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-12 col-md-10 col-lg-7 col-xl-6">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-body p-4 p-lg-5">
                    <h3 class="card-title text-center mb-2">Reset Password</h3>
                    <p class="text-muted text-center mb-4">Create a strong password to keep your account secure.</p>

                    <form action="/reset-password/<%= token %>" method="POST" class="validated-form" novalidate id="resetForm">
                        <div class="mb-3">
                            <label class="form-label" for="password">New password</label>
                            <input class="form-control form-control-lg" type="password" id="password" name="password" required minlength="8" placeholder="Enter new password">
                            <div class="password-strength mt-2">
                                <div class="progress" style="height: 6px;">
                                    <div class="progress-bar" id="strengthBar" role="progressbar" style="width: 0%"></div>
                                </div>
                                <small id="strengthText" class="text-muted">Use at least 8 characters with a mix of letters, numbers & symbols.</small>
                            </div>
                            <div class="valid-feedback">
                                Password looks good!
                            </div>
                            <div class="invalid-feedback">
                                Password must be at least 8 characters long and contain uppercase, lowercase, number, and special character.
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label" for="confirmPassword">Confirm new password</label>
                            <input class="form-control form-control-lg" type="password" id="confirmPassword" name="confirmPassword" required placeholder="Re-enter new password">
                            <div class="valid-feedback">
                                Passwords match!
                            </div>
                            <div class="invalid-feedback">
                                Passwords do not match.
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            <button class="btn btn-success btn-lg" type="submit">Reset password</button>
                            <a href="/login" class="btn btn-outline-secondary">Back to login</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const strengthBar = document.getElementById('strengthBar');
    const strengthText = document.getElementById('strengthText');
    const form = document.getElementById('resetForm');

    // Password strength validation
    function checkPasswordStrength(password) {
        let strength = 0;
        let feedback = [];

        if (password.length >= 8) strength += 20;
        else feedback.push('at least 8 characters');

        if (/[a-z]/.test(password)) strength += 20;
        else feedback.push('lowercase letter');

        if (/[A-Z]/.test(password)) strength += 20;
        else feedback.push('uppercase letter');

        if (/[0-9]/.test(password)) strength += 20;
        else feedback.push('number');

        if (/[^A-Za-z0-9]/.test(password)) strength += 20;
        else feedback.push('special character');

        return { strength, feedback };
    }

    function updatePasswordStrength() {
        const password = passwordInput.value;
        const { strength, feedback } = checkPasswordStrength(password);

        strengthBar.style.width = strength + '%';
        
        if (strength < 40) {
            strengthBar.className = 'progress-bar bg-danger';
            strengthText.textContent = 'Weak password. Add: ' + feedback.join(', ');
            strengthText.className = 'text-danger';
        } else if (strength < 80) {
            strengthBar.className = 'progress-bar bg-warning';
            strengthText.textContent = 'Medium strength. Add: ' + feedback.join(', ');
            strengthText.className = 'text-warning';
        } else {
            strengthBar.className = 'progress-bar bg-success';
            strengthText.textContent = 'Strong password!';
            strengthText.className = 'text-success';
        }

        // Validate password
        if (password.length >= 8 && strength >= 80) {
            passwordInput.setCustomValidity('');
        } else {
            passwordInput.setCustomValidity('Password must be at least 8 characters long and contain uppercase, lowercase, number, and special character.');
        }
    }

    function validatePasswordMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;

        if (confirmPassword && password !== confirmPassword) {
            confirmPasswordInput.setCustomValidity('Passwords do not match.');
        } else {
            confirmPasswordInput.setCustomValidity('');
        }
    }

    // Event listeners
    passwordInput.addEventListener('input', updatePasswordStrength);
    confirmPasswordInput.addEventListener('input', validatePasswordMatch);

    // Form submission validation
    form.addEventListener('submit', function(event) {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        const { strength } = checkPasswordStrength(password);

        if (strength < 80) {
            event.preventDefault();
            event.stopPropagation();
            passwordInput.focus();
        }

        if (password !== confirmPassword) {
            event.preventDefault();
            event.stopPropagation();
            confirmPasswordInput.focus();
        }

        form.classList.add('was-validated');
    });
});
</script>
